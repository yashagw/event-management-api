{
    "swagger": "2.0",
    "info": {
        "description": "API server for event management system.",
        "title": "Event Mangement API",
        "contact": {
            "name": "Yash Agarwal",
            "email": "yash.ag@outlook.com"
        },
        "version": "1.0"
    },
    "paths": {
        "/hosts/events": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Lists events created by the host.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "host"
                ],
                "summary": "Lists events created by the host.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ListEventsResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates a new event.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "host"
                ],
                "summary": "Creates a new event.",
                "parameters": [
                    {
                        "description": "Event",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateEventParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Event"
                        }
                    }
                }
            }
        },
        "/hosts/events/{event_id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get event info created by the host.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "host"
                ],
                "summary": "Get event info created by the host.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Event"
                        }
                    }
                }
            }
        },
        "/moderators/requests": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Lists pending requests to become host.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "moderator"
                ],
                "summary": "Lists pending requests to become host.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ListPendingRequestsResponse"
                        }
                    },
                    "401": {
                        "description": "Not Authorized",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Approves or disapproves a request to become host.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "moderator"
                ],
                "summary": "Approves or disapproves a request to become host.",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ApproveDisapproveUserHostRequestParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "request approved/disapproved",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Not Authorized",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Creates a new user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Creates a new user.",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateUserParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    }
                }
            }
        },
        "/users/host": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates a new request to become host.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Creates a new request to become host.",
                "responses": {
                    "200": {
                        "description": "request to become host created",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Not Authorized",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Logs in a user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Logs in a user.",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.LoginUserParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.LoginUserResponse"
                        }
                    }
                }
            }
        },
        "/users/ticket": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Buys ticket for an event.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Buys ticket for an event.",
                "parameters": [
                    {
                        "description": "Ticket",
                        "name": "ticket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateTicketParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Ticket"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ApproveDisapproveUserHostRequestParams": {
            "type": "object",
            "properties": {
                "approved": {
                    "type": "boolean"
                },
                "request_id": {
                    "type": "integer"
                }
            }
        },
        "api.CreateEventParams": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "total_tickets": {
                    "type": "integer"
                }
            }
        },
        "api.CreateTicketParams": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "api.CreateUserParams": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "api.LoginUserParams": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "api.LoginUserResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/api.UserResponse"
                }
            }
        },
        "api.ResponseMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api.UserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password_updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Event": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "host_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "left_tickets": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "total_tickets": {
                    "type": "integer"
                }
            }
        },
        "model.ListEventsResponse": {
            "type": "object",
            "properties": {
                "next_offset": {
                    "type": "integer"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Event"
                    }
                }
            }
        },
        "model.ListPendingRequestsResponse": {
            "type": "object",
            "properties": {
                "next_offset": {
                    "type": "integer"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UserHostRequest"
                    }
                }
            }
        },
        "model.Ticket": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "event_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.UserHostRequest": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "moderator_id": {
                    "$ref": "#/definitions/sql.NullInt64"
                },
                "status": {
                    "$ref": "#/definitions/model.UserHostRequestStatus"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.UserHostRequestStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "UserHostRequestStatus_Pending",
                "UserHostRequestStatus_Rejected",
                "UserHostRequestStatus_Approved"
            ]
        },
        "sql.NullInt64": {
            "type": "object",
            "properties": {
                "int64": {
                    "type": "integer"
                },
                "valid": {
                    "description": "Valid is true if Int64 is not NULL",
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "authorization",
            "in": "header"
        }
    }
}